Ok, so bad readers didn't work. Good readers work direct with pi.

Key code stored in SECTOR 1 FIRST BYTE



=====================================================================


MATERIALS
=========

4 more RFID header soldering
4 cables
4 USB to Mini USB
4 USB to Micro USB
3 Duino Nanos
4 tags
==> sufficient for local tests.

======================================================================

Setting thse 4 pis to autoboot. <== JUST NEED TAG IDs AND PROGRAMMED ACTUAL TAGS.
When tags are programmed, alter the number in the_key,
Each pi has a unique piID variable equal to 0, 1, 2 or 3.
the_key is set to all [1, 1, 1, 1] for testing.
The elements specify all 4 tag id values, as follows.

the_key = [for pi id 0, for pi id 1, for pi id 2, for pi id 3]

BUILD = False must be set on each on install to use the show controller.

The following 2 commands were run

sudo apt-get install python-dev python-pip

sudo pip install pyserial

An rc.local line was created for auto boot.

The 2G internet SSH IP is 192.168.1.... for the 4 pis.

ID          IP
==          ==
0           .112
1           .109
2           .110
3           .111
========================================================================
Created repo from machine copy
A simple script so that all pis can run same code.
The following pins make the pi behave as:

# a set up pins. pull one up to indicate which candle is being
IS_21 = 8 # pin 12
IS_22 = 9 # pin 18
IS_23 = 10 # pin 16
IS_24 = 11 # pin 32

#this may get changed later

DON' FORGET TO CHANGE BUILD = False in production.
piID is pi number 0 to 3 based.
all of them can handle chest. "open" from show controller.